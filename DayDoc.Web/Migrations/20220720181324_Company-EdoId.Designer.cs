// <auto-generated />
using System;
using DayDoc.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DayDoc.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220720181324_Company-EdoId")]
    partial class CompanyEdoId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("DayDoc.Web.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EdoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("INN")
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("KPP")
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("DayDoc.Web.Models.Doc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContragentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("DocType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Num")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Sum")
                        .HasPrecision(19, 4)
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ContragentId");

                    b.HasIndex("OwnCompanyId");

                    b.ToTable("Docs");
                });

            modelBuilder.Entity("DayDoc.Web.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnCompanyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnCompanyId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("DayDoc.Web.Models.Doc", b =>
                {
                    b.HasOne("DayDoc.Web.Models.Company", "Contragent")
                        .WithMany()
                        .HasForeignKey("ContragentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DayDoc.Web.Models.Company", "OwnCompany")
                        .WithMany()
                        .HasForeignKey("OwnCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contragent");

                    b.Navigation("OwnCompany");
                });

            modelBuilder.Entity("DayDoc.Web.Models.Setting", b =>
                {
                    b.HasOne("DayDoc.Web.Models.Company", "OwnCompany")
                        .WithMany()
                        .HasForeignKey("OwnCompanyId");

                    b.Navigation("OwnCompany");
                });
#pragma warning restore 612, 618
        }
    }
}
